<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
  <mapper namespace="com.dustmq.mapper.AdminMapper">
	
	<!-- 상품 등록 -->
	<!-- 자동 생성키 역할을 하는 selectkey 태그를 적용, 쿼리에서 수행된 특정 칼럼값을 반환받기 위해 사용 -->
  	<insert id="bookEnroll">
  	
  		<!-- 아래 쿼리문이 실행된 후 실행된다. -->
  		<selectKey resultType="int" keyProperty="bookId" order="AFTER">
  		
  			select bookId_seq.currval from dual		<!-- 현 bookId값의 마지막 번호를 조회 ( 최대값을 의미 ) -->
  		
  		</selectKey>
  	
  		insert into vam_book(bookId, bookName, authorId, publeYear, publisher, cateCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents)
		values(bookId_seq.NEXTVAL, #{bookName},#{authorId}, #{publeYear},#{publisher},#{cateCode},#{bookPrice},#{bookStock},#{bookDiscount},#{bookIntro},#{bookContents})

  	</insert>
  	
  	<!-- 카테고리 리스트 -->
  	<select id="cateList" resultType="com.dustmq.model.CateVO">
  	
  		select * from vam_bcate order by catecode
  	
  	</select>
  	
  	<!-- SYS_C008313 -->
  	<!-- 상품 리스트 -->
  	<select id="goodsGetList" resultType="com.dustmq.model.BookVO">
  	
	  	<![CDATA[
		select * from(
		    select /*+INDEX_DESC(vam_book SYS_C008313)*/ rownum as rn, bookId, bookName,
		        (select authorName from vam_author where vam_book.authorId = vam_author.authorId) authorName,
		        (select cateName from vam_bcate where vam_book.cateCode = vam_bcate.cateCode) cateName,bookStock,regDate
		    from vam_book 
		    where 
		]]>    
		
		    <if test="keyword != null">
		    
			    bookName like '%' || #{keyword} || '%' and
			    
		    </if>
		     
		<![CDATA[    
		    rownum <= #{pageNum} * #{amount} 
		    )
			where rn > (#{pageNum} -1) * #{amount}		  	
  		]]>
  	
  	</select>
  	
  	<!-- 상품 총 개수 -->
  	<select id="goodsGetTotal" resultType="int">
  	
  		select count(*) from vam_book
  		
  		<if test="keyword != null">
  		
  			where bookName like '%' || #{keyword} || '%'
  		</if>
  		
  	</select> 
  	
  	<!-- 상품 조회 페이지 -->
  	<select id="goodsGetDetail" resultType="com.dustmq.model.BookVO">
  	
  		select bookId, bookName, (select authorName from vam_author where authorId = vam_book.authorId) authorName,
  				authorId, publeYear, publisher, cateCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents, regDate, updateDate 
		from vam_book where bookId = #{bookId}
  	
  	</select>
  	
  	<!-- 상품 정보 수정 -->
	<update id="goodsModify">
	
		update vam_book set bookName = #{bookName}, authorId = #{authorId}, publeYear = #{publeYear}, publisher = #{publisher}, cateCode = ${cateCode}, 
		bookPrice = #{bookPrice}, bookStock = #{bookStock}, bookDiscount = #{bookDiscount}, bookIntro = #{bookIntro}, bookContents = #{bookContents}, updateDate = sysdate
		where bookId = ${bookId}
	
	</update>  	
	
	<!-- 상품 정보 삭제 -->
	<delete id="goodsDelete">
	
		delete from vam_book where bookId = #{bookId}
	
	</delete>
	
	<!-- 이미지 등록 -->
	<insert id="imageEnroll">
	
		insert into vam_image(bookId, fileName, uploadPath, uuid) values (#{bookId}, #{fileName}, #{uploadPath}, #{uuid})
	
	</insert>
	
	<!-- 지정 상품 이미지 전체 삭제 -->
	<delete id="deleteImageAll">
	
		delete from vam_image where bookId = #{bookId}
	
	</delete>
	
	<!-- 어제자 날짜 이미지 리스트 -->
	<select id="checkFileList" resultType="com.dustmq.model.AttachImageVO">
	
		select * from vam_image where uploadPath = to_char(sysdate -1, 'yyyy\mm\dd')
	
	</select>
	
	<!-- 지정 상품 이미지 정보 얻기 -->
	<select id="getAttachInfo" resultType="com.dustmq.model.AttachImageVO">
	
		select * from vam_image where bookId = #{bookId}	
	
	</select>
	
	<!-- 주문 리스트 -->
	<select id="getOrderList" resultType="com.dustmq.model.OrderVO">
	
		<![CDATA[
		select * 
		from(
		    select rownum rn, orderId, memberId, orderstate, orderdate
		    from vam_order
		    where rownum <= #{pageNum} * #{amount} 
		]]>    
		<if test="keyword != null">	<!-- 키워드가 있을 때 -->
			and memberId like '%'||#{keyword}||'%'
		</if>
		<![CDATA[
		    
		    order by orderdate desc
		    )
		    
		where rn > (#{pageNum} -1) * #{amount}
		]]>
	
	</select>
	
	<!-- 상품 총 개수 -->
	<select id="getOrderTotal" resultType="int">
	
		select count(*) from vam_order
		
		<if test="keyword != null">	<!-- 키워드가 있을 때 -->
			where memberId like '%' || #{keyword} || '%'
		</if>
	
	</select>
	
	
	
  </mapper>