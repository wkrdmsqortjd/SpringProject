<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
  <mapper namespace="com.dustmq.mapper.MemberMapper">
  	<!-- MemberMapper의 메서드와 이름이 같게 작성 -->
  
	<!-- 회원 가입 sql문 -->  
  	<insert id="memberJoin">
  	
  	   insert into bs_member
		 values(#{memberId}, #{memberPw}, #{memberName}, #{memberMail}, #{memberAddr1}, #{memberAddr2}, #{memberAddr3}, 0, sysdate, 100000, 5000 )
  
  	</insert>
  	
  	<!-- 아이디 중복검사 -->
  	<select id="idCheck" resultType="int">
  		<!-- count는 해당 데이터의 갯수를 반환 -->
  		select count(*) from bs_member
  	    where memberId = #{memberId}
  	
  	</select>
  	
  	<!-- 로그인 -->
  	<select id="memberLogin" resultType="com.dustmq.model.MemberVO">
      
       <!-- select memberId, memberName, adminck, money, point from bs_member where memberId = #{memberId} and memberPw = #{memberPw} -->
       <!-- where문에 아이디만 확인하도록 해주고, 반환받는 데이터에 비밀번호도 추가 (비밀번호 BCrypt사용 전 쿼리)-->
       select memberId, memberPw, memberName, adminCk, money, point from bs_member
       where memberId = #{memberId}	
      	
    </select>
    
    <!-- 주문자 정보 -->
    <select id="getMemberInfo" resultType="com.dustmq.model.MemberVO">
    
    	select memberId, memberName, memberMail, memberAddr1, memberAddr2, memberAddr3, money, point 
  		from bs_member 
  		where memberId = #{memberId}
    
    </select>
    
    <!-- 카카오 정보 저장 -->
  	<insert id="kakaoInsert" parameterType = "java.util.HashMap">
  	
  		insert into kakao_login(k_number,k_name, k_email)
 		values(seq_k_number.nextval,#{nickname}, #{email})
 		
  	</insert>
  	
  	<!-- 카카오 정보 찾기 -->
	<select id="findKakao" parameterType="java.util.HashMap" resultType="com.dustmq.model.KakaoDTO">
	
		select * from kakao_login where k_name=#{nickname} and k_email=#{email}
		
	</select>
  	
  </mapper>